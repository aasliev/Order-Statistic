def partition_quick_Select(alist, start, end):
    pivot = randint(start, end)
    temp = alist[end]
    alist[end] = alist[pivot]
    alist[pivot] = temp
    pIndex = start

    for i in range(start, end):
        if alist[i] <= alist[end]:
            temp = alist[i]
            alist[i] = alist[pIndex]
            alist[pIndex] = temp
            pIndex += 1
    temp1 = alist[end]
    alist[end] = alist[pIndex]
    alist[pIndex] = temp1
    return pIndex


def findTheKth_QuickSelect(arr, leftindex, rightindex, k):
  if (rightindex - leftindex + 1 >= k and k > 0):

      pivotindex = partition_quick_Select(arr, leftindex, rightindex)
      if (pivotindex - leftindex == k - 1):
          return arr[pivotindex]
      elif (pivotindex - leftindex >= k):  # k is in first subarray
          return findTheKth_QuickSelect(arr, leftindex, pivotindex - 1, k)
      else:  # k is in first subarray
          return findTheKth_QuickSelect(arr, pivotindex + 1, rightindex, k - pivotindex+leftindex - 1)
  else:
      return sys.maxsize
